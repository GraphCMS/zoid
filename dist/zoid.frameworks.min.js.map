{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/belter/src/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/child.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/parent.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","awaitPromises","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","childFrame","isOpener","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","normalizeMockUrl","closeWindow","close","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","Date","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","awaitFrameLoadPromises","memoizedFunctions","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","reset","memoizePromise","memoizedPromiseFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","identity","safeInterval","loop","defineLazyProp","configurable","arrayFrom","isObjectObject","isPlainObject","prototype","replaceObject","replacer","fullKey","itemKey","isDefined","cleanup","tasks","cleaned","register","task","shift","assertExists","thing","isDocumentReady","document","body","readyState","isDocumentInteractive","urlEncode","parseQuery","queryString","params","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","interval","setInterval","clearInterval","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","tag","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","hasAttribute","getElement","event","removeEventListener","showElement","setProperty","hideElement","destroyElement","removeChild","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","canceled","observer","getClientRects","isElementVisible","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isShadowElement","clear","currentScript","getCurrentScript","getStackTrace","stackDetails","exec","scriptLocation","getElementsByTagName","reverse","script","src","inferCurrentScript","currentUID","isPerc","test","toNum","toPx","toCSS","normalizeDimension","dim","max","getGlobal","globalKey","__POST_ROBOT__","getAttribute","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","send","instanceID","data","getWindowInstanceID","awaitWindowHello","getHelloPromise","markWindowKnown","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","BRIDGE_NAME_PREFIX","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","winName","details","setupBridge","windowOpen","on","receiveMessage","open","last","bridgePromise","bridge","getWindowDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","cleanTunnelWindows","addTunnelWindow","tunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","windowTypePromise","getType","getName","focus","isClosed","setLocation","href","setName","sameDomain","frameElement","querySelectorAll","getFrameForWindow","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","getID","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","arg","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","domainBuffer","buffer","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","RECEIVE_MESSAGE_TYPES","logName","sendResponse","ack","pathname","handleError","receivedMessages","messages","parsedMessage","parseMessages","deserializeMessages","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","domainMatcher","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","internalSerializeMessage","internalDeserializeMessage","cleanUpWindow","getProxyObject","openBridge","bridges","bridgeFrames","openBridgeFrame","linkUrl","hasBridge","destroyBridges","PROP_TYPE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","EVENT","RENDER","RENDERED","DISPLAY","ERROR","CLOSE","DESTROY","PROPS","RESIZE","FOCUS","normalizeChildProp","propsDef","helpers","prop","childDecorate","onProps","resize","getParentDomain","show","hide","parseChildWindowName","windowName","zoidcomp","encodedPayload","atob","charCodeAt","base64decode","getChildPayload","destroy","getQueryParam","queryParam","getQueryValue","queryValue","parentComponent","overrides","parentWin","triggered","currentProxyWin","currentProxyContainer","childComponent","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","initPromise","handledErrors","clean","state","internalState","visible","eventName","handlerList","trigger","triggerOnce","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","hideOverride","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getInternalStateOverride","getInternalState","setInternalStateOverride","setInternalState","getPropsForChild","sendToChild","newInternalState","windowProp","proxyWin","containerElement","shadowHost","shadowRoot","getShadowRoot","getShadowHost","slotName","slot","slotProvider","insertShadowSlot","setState","getUrl","getAttributes","getChildDomain","getDomainMatcher","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","getWindowRef","windows","initChild","childExports","proxyFrame","frameWatcher","outerWidth","left","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","unloadWindowListener","closeParentWindowListener","checkWindowClose","secondIsClosed","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","isBlankDomain","tagName","children","writeElementToWindow","prerenderResizeListener","proxyContainer","innerContainer","getHelpers","updateProps","setProps","newProps","isUpdate","inputProps","propNames","aliases","propDef","alias","default","decorate","required","extendProps","childProps","init","onRender","onDisplay","onRendered","onClose","onDestroy","onFocus","render","ZOID","childDomain","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","POST_MESSAGE","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildUrlPromise","serialization","dotify","prefix","newobj","every","dotkey","propsToQuery","query","originalUrl","originalHash","hashString","extendUrl","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","buildWindowNamePromise","propRef","getPropsRef","propsRef","version","__ZOID__","parentDomain","checkClose","buildChildPayload","childPayload","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","loadUrlPromise","builtUrl","watchForClosePromise","watchForClose","onDisplayPromise","openBridgePromise","bridgeUrl","bridgeDomain","runTimeoutPromise","onRenderedPromise","react","React","ReactDOM","subClass","superClass","__proto__","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","component","inheritAttrs","mounted","$el","$attrs","watch","deep","angular","ng","directive","g","toUpperCase","scope","restrict","controller","$scope","$element","safeApply","$root","$$phase","$apply","getProps","instance","$watch","angular2","NgModule","ElementRef","NgZone","internalProps","zone","run","ComponentInstance","AngularComponent","selector","template","inputs","Class","elementRef","_props","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","declarations","defaultContainerTemplate","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","defaultNoop","decorateOnce","cleanInstances","cleanZoid","allowDelegateListener","delegateListener","allowedParentDomains","defaultContext","validate","eligible","logger","info","normalizeOptions","driverCache","instances","isChild","payload","registerChild","xprops","components","onPropHandlers","parentComponentWindow","ref","getNthParent","ancestor","getParentComponentWindow","normalizedProps","normalizeChildProps","checkParentDomain","getPropsByRef","eligibility","reason","getDefaultContext","finalContext","getDefaultContainer","isEligible","clone","renderTo","driver","driverName","dep","drivers","canRenderTo","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","comp","destroyComponents","destroyPromise","destroyAll","responseListeners","cancelResponseListeners"],"mappings":"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","file":"zoid.frameworks.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        let awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                let value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n        \n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nconst memoizedFunctions = [];\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : F & {| reset : () => void |} {\n    const cacheMap = new WeakMap();\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        const cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        const key : string = serializeArgs(args);\n\n        const cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    memoizedFunctions.push(memoizedFunction);\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    for (const memoizedFunction of memoizedFunctions) {\n        memoizedFunction.reset();\n    }\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    const result = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const memoizedValues = memoize(values);\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport const waitForDocumentReady = memoize(() : ZalgoPromise<void> => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : { [string] : string }, hash? : { [string] : string } |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n        \n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator; // eslint-disable-line compat/compat\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i); // eslint-disable-line compat/compat\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n    \n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    if (isShadowElement(shadowHost)) {\n        throw new Error(`Host element is also in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n    \n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\nexport const getCurrentScript = memoize(() : HTMLScriptElement => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\nexport const getCurrentScriptUID = memoize(() : string => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = uniqueID();\n    script.setAttribute(ATTRIBUTES.UID, uid);\n\n    return uid;\n});\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet, getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__POST_ROBOT__.__SCRIPT_NAMESPACE__) {\n        return `${ __POST_ROBOT__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __POST_ROBOT__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (win !== window) {\n        return win[globalKey];\n    }\n    const global : Object = win[globalKey] = win[globalKey] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore, getGlobal } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : {| on : OnType |}) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<{| win : CrossDomainWindowType, domain : string, instanceID : string |}> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(err => {\n                // $FlowFixMe\n                if (__TEST__ && getGlobal(parent)) {\n                    throw err;\n                }\n            });\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{| domain : string |}> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void,\n    data : mixed\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code, data } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code, data });\n}\n\nexport function deserializeError({ message, stack, code, data } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n\n    if (data) {\n        // $FlowFixMe\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : {| win? : CrossDomainWindowType, domain? : string |}) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n            if (source !== bridge) {\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            const getWindowDetails = () : WinDetails => {\n                const winDetails = popupWindowsByName.get(data.name);\n                // $FlowFixMe\n                return winDetails;\n            };\n\n            if (!getWindowDetails().domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            if (getWindowDetails().domain !== origin) {\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ getWindowDetails().domain || 'unknown' }`);\n            }\n\n            registerRemoteSendMessage(getWindowDetails().win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    if (!getWindowDetails()) {\n                        return;\n                    }\n\n                    const domain = getWindowDetails().domain;\n\n                    if (!domain) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: domain,\n                            source: getWindowDetails().win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        const details = popupWindowsByName.get(winName);\n        if (!details || isWindowClosed(details.win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        return { win, name, domain };\n    }\n\n    const details = popupWindowsByWin.getOrSet(win, () : WinDetails => {\n        if (!name) {\n            return { win };\n        }\n        \n        // $FlowFixMe\n        return popupWindowsByName.getOrSet(name, () : WinDetails => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : {| send : SendType |}) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            if (isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    if (frame && isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n        \n        if (!opener || !needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            return getGlobal(assertSameDomain(bridge)).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise, noop } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : {| send : SendType, id? : string |}) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    const windowTypePromise = winPromise.then(window => {\n        if (!isWindowClosed(window)) {\n            return getOpener(window) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        } else {\n            throw new Error(`Window is closed, can not determine type`);\n        }\n    });\n\n    windowNamePromise.catch(noop);\n    windowTypePromise.catch(noop);\n\n    return {\n        id,\n        getType: () => {\n            return windowTypePromise;\n        },\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName:       () => winPromise.then(win => {\n            if (isWindowClosed(win)) {\n                return;\n            }\n\n            if (isSameDomain(win)) {\n                return assertSameDomain(win).name;\n            }\n\n            return windowNamePromise;\n        }),\n        focus:   () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation: (href) => winPromise.then(win => {\n            const domain = `${ window.location.protocol }//${ window.location.host }`;\n\n            if (href.indexOf('/') === 0) {\n                href = `${ domain }${ href }`;\n            } else if (!href.match(/^https?:\\/\\//) && href.indexOf(domain) !== 0) {\n                throw new Error(`Expected url to be http or https url, or absolute path, got ${ JSON.stringify(href) }`);\n            }\n\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n        }),\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : {| win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType |}) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        \n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : {| send : SendType |}) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : {| source : CrossDomainWindowType, origin : string, data : Object |}) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {|\n    id : string,\n    name : string\n|}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : {| id : string, name : string |}, { send } : {| send : SendType |}) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    const args = Array.prototype.slice.call(arguments);\n\n                    if (opts.fireAndForget) {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n                    } else {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: false })\n                            .then(res => res.data.result);\n                    }\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : {| on : OnType, send : SendType |}) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { send } : {| on : OnType, send : SendType |}) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {|\n    then : SerializedFunction\n|}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : {| then : Function |}) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n    if (domain.indexOf(PROTOCOL.FILE) === 0) {\n        domain = WILDCARD;\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n\n        if (domain.indexOf(PROTOCOL.MOCK) === 0) {\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send message to mock domain ${ domain }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            const windowDomain = getDomain(win);\n                \n            if (windowDomain !== domain) {\n                throw new Error(`Mock domain target ${ domain } does not match window domain ${ windowDomain }`);\n            }\n\n            // $FlowFixMe\n            domain = getActualDomain(win);\n\n        }\n    }\n\n    win.postMessage(serializedMessage, domain);\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport { windowStore, getGlobalKey } from '../../global';\nimport type { Message, PackedMessages } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction packMessages(messages : $ReadOnlyArray<Message>) : PackedMessages {\n    return {\n        [ getGlobalKey() ]: messages\n    };\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string, message : Message, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const messageBuffer = windowStore();\n\n        const domainBuffer = messageBuffer.getOrSet(win, () => ({}));\n\n        domainBuffer.buffer = domainBuffer.buffer || [];\n        domainBuffer.buffer.push(message);\n\n        domainBuffer.flush = domainBuffer.flush || ZalgoPromise.flush().then(() => {\n            if (isWindowClosed(win)) {\n                throw new Error('Window is closed');\n            }\n\n            const serializedMessage = serializeMessage(win, domain, packMessages(domainBuffer.buffer || []), { on, send });\n            delete domainBuffer.buffer;\n\n            const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n            const errors = [];\n\n            for (const strategyName of strategies) {\n                try {\n                    SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n                } catch (err) {\n                    errors.push(err);\n                }\n            }\n\n            if (errors.length === strategies.length) {\n                throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n            }\n        });\n\n        return domainBuffer.flush.then(() => {\n            delete domainBuffer.flush;\n        });\n    }).then(noop);\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({| source : CrossDomainWindowType, origin : string, data : mixed |}) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) |}) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher |}, listener : RequestListenerType) : {| cancel : () => void |} {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError, uniqueID } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, ResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendAck() : ZalgoPromise<void> {\n            return ZalgoPromise.flush().then(() => {\n                if (message.fireAndForget || isWindowClosed(source)) {\n                    return;\n                }\n\n                try {\n                    return sendMessage(source, origin, {\n                        id:     uniqueID(),\n                        origin: getDomain(window),\n                        type:   MESSAGE_TYPE.ACK,\n                        hash:   message.hash,\n                        name:   message.name\n                    }, { on, send });\n                } catch (err) {\n                    throw new Error(`Send ack message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n                }\n            });\n        }\n\n\n        function sendResponse(ack : $Values<typeof MESSAGE_ACK>, data : ?Object, error : ?mixed) : ZalgoPromise<void> {\n            return ZalgoPromise.flush().then(() => {\n                if (message.fireAndForget || isWindowClosed(source)) {\n                    return;\n                }\n\n                if (__DEBUG__) {\n                    if (ack === MESSAGE_ACK.SUCCESS) {\n                        console.info('respond::res', logName, origin, '\\n\\n', data);  // eslint-disable-line no-console\n                    } else if (ack === MESSAGE_ACK.ERROR) {\n                        console.error('respond::err', logName, origin, '\\n\\n', error); // eslint-disable-line no-console\n                    }\n                }\n\n                try {\n                    return sendMessage(source, origin, {\n                        id:     uniqueID(),\n                        origin: getDomain(window),\n                        type:   MESSAGE_TYPE.RESPONSE,\n                        hash:   message.hash,\n                        name:   message.name,\n                        ack,\n                        data,\n                        error\n                    }, { on, send });\n                } catch (err) {\n                    throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n                }\n            });\n        }\n\n    \n        return ZalgoPromise.all([\n            sendAck(),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_ACK.SUCCESS, data);\n\n            }, error => {\n                return sendResponse(MESSAGE_ACK.ERROR, null, error);\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        try {\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n    \n            if (source !== options.win) {\n                throw new Error(`Ack source does not match registered window`);\n            }\n        } catch (err) {\n            options.promise.reject(err);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : ResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport type { Message } from '../types';\nimport { MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore, getGlobalKey } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction deserializeMessages(message : string, source : CrossDomainWindowType, origin : string, { on, send } : {| on : OnType, send : SendType |}) : ?$ReadOnlyArray<Message> {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    const parseMessages = parsedMessage[getGlobalKey()];\n\n    if (!Array.isArray(parseMessages)) {\n        return;\n    }\n\n    return parseMessages;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const messages = deserializeMessages(data, source, origin, { on, send });\n\n    if (!messages) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    for (const message of messages) {\n        if (receivedMessages.has(message.id)) {\n            return;\n        }\n\n        receivedMessages.set(message.id, true);\n\n        if (isWindowClosed(source) && !message.fireAndForget) {\n            return;\n        }\n\n        if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        try {\n            if (message.type === MESSAGE_TYPE.REQUEST) {\n                RECEIVE_MESSAGE_TYPES[MESSAGE_TYPE.REQUEST](source, origin, message, { on, send });\n            } else if (message.type === MESSAGE_TYPE.RESPONSE) {\n                RECEIVE_MESSAGE_TYPES[MESSAGE_TYPE.RESPONSE](source, origin, message);\n            } else if (message.type === MESSAGE_TYPE.ACK) {\n                RECEIVE_MESSAGE_TYPES[MESSAGE_TYPE.ACK](source, origin, message);\n            }\n        } catch (err) {\n            setTimeout(() => {\n                throw err;\n            }, 0);\n        }\n    }\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : {| on : OnType, send : SendType |}) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : {| origin : string |}\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    ZalgoPromise.try(() => {\n        try {\n            noop(event.source);\n        } catch (err) {\n            return;\n        }\n\n        const source = event.source || event.sourceElement;\n        let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n        const data = event.data;\n\n        if (origin === 'null') {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        if (!source) {\n            return;\n        }\n\n        if (!origin) {\n            throw new Error(`Post message did not have origin domain`);\n        }\n\n        if (__TEST__) {\n            if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n                return;\n            }\n        }\n\n        receiveMessage({ source, origin, data }, { on, send });\n    });\n}\n\nexport function listenForMessages({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nconst getDefaultServerOptions = () : ServerOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{| source : mixed, origin : string, data : Object |}> {\n    \n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Can not send ${ name }. Expected domain ${ JSON.stringify(domain) } to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error(`Can not send ${ name }. Target window is closed`);\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof targetDomain === 'string') {\n            return targetDomain;\n        }\n\n        return ZalgoPromise.try(() => {\n            return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n        }).then(normalizedDomain => {\n            if (!matchDomain(targetDomain, targetDomain)) {\n                throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n            }\n\n            return normalizedDomain;\n        });\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    const domainMatcher = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domainMatcher);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domainMatcher, actualDomain, { send });\n    }).then(targetDomain => {\n        const domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        return sendMessage(win, domain, {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            type:   MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send }).then(() => {\n            return fireAndForget ? promise.resolve() : promise;\n        }, err => {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        });\n    });\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, createProxyWindow, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__ZOID__.__SCRIPT_NAMESPACE__) {\n        return `${ __ZOID__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __ZOID__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win? : CrossDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[globalKey]) {\n        win[globalKey] = {};\n    }\n\n    return win[globalKey];\n}\n\nexport function destroyGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T>(propsDef : PropsDefinitionType<P>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide } = helpers;\n        const decoratedValue = prop.childDecorate({ value, uid, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, onResize, elementReady, assertExists, noop } from 'belter/src';\n\nimport { getGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { NormalizedComponentOptionsType } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef } from '../parent';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P> = {|\n    uid : string,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n    const { type } = ref;\n\n    if (type === WINDOW_REFERENCES.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n    } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n        const { uid } = ref;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const global = getGlobal(frame);\n\n                if (global && global.windows && global.windows[uid]) {\n                    return global.windows[uid];\n                }\n            }\n        }\n    }\n\n    throw new Error(`Unable to find ${ type } parent component window`);\n}\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nfunction getPropsByRef<P>(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n    let props;\n\n    if (type === INITIAL_PROPS.RAW) {\n        props = value;\n    } else if (type === INITIAL_PROPS.UID) {\n        if (!isSameDomain(parentComponentWindow)) {\n            throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n        }\n\n        const global = getGlobal(parentComponentWindow);\n        props = assertExists('props', global && global.props[uid]);\n    }\n\n    if (!props) {\n        throw new Error(`Could not find props`);\n    }\n\n    return deserializeMessage(parentComponentWindow, domain, props);\n}\n\nexport type ChildComponent<P> = {|\n    getProps : () => PropsType<P>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P>(options : NormalizedComponentOptionsType<P>) : ChildComponent<P> {\n    const { propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n    const childPayload = getChildPayload();\n    let props : PropsType<P>;\n\n    if (!childPayload) {\n        throw new Error(`No child payload found`);\n    }\n\n    if (childPayload.version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { uid, parent: parentRef, parentDomain, exports, context, props: propsRef } = childPayload;\n    const parentComponentWindow = getParentComponentWindow(parentRef);\n    const parent = deserializeMessage(parentComponentWindow, parentDomain, exports);\n\n    const { show, hide, close } = parent;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (parent && parent.onError) {\n                return parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    };\n\n    const resize = ({ width, height } : {| width : ?number, height : ?number |}) : ZalgoPromise<void> => {\n        return parent.resize.fireAndForget({ width, height });\n    };\n\n    const getHelpers = () : ChildHelpers<P> => {\n        return {\n            show, hide, close, focus, onError, resize,\n            onProps, getParent, getParentDomain, uid\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : ZalgoPromise<{| width : boolean, height : boolean, element : ?HTMLElement |}> => {\n        const { width = false, height = false, element: elementRef = 'body' } = autoResize;\n        return elementReady(elementRef).catch(noop).then(element => {\n            return { width, height, element };\n        });\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return getAutoResize().then(({ width, height, element }) => {\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parent.init({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        }\n\n        setProps(getPropsByRef(parentComponentWindow, parentDomain, propsRef), parentDomain);\n        return props;\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend } from 'belter/src';\n\nimport type { PropsInputType, PropsType, PropsDefinitionType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function extendProps<P>(propsDef : PropsDefinitionType<P>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    inputProps = inputProps || {};\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...Object.keys(propsDef) ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, event, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = propsDef[key];\n\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, event, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, event, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (__DEBUG__ && isDefined(value) && propDef.validate) {\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            props[key] = propDef.decorate({ value, props, state, close, focus, event, onError });\n        }\n    }\n\n    for (const key of Object.keys(propsDef)) {\n        const propDef = propsDef[key];\n        // $FlowFixMe\n        const propVal = props[key];\n        if (propDef.required !== false && !isDefined(propVal)) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\n// $FlowFixMe\nfunction getQueryParam<P>(prop : MixedPropDefinitionType<P>, key : string, value : string) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<P>(prop : MixedPropDefinitionType<P>, key : string, value : string) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : PropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    // $FlowFixMe\n    const keys = Object.keys(props);\n    \n    return ZalgoPromise.all(keys.map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                getQueryParam(prop, key, value),\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, base64encode, isRegex,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { CssDimensionsType } from '../types';\nimport type { NormalizedComponentOptionsType, AttributesType } from '../component';\n\nimport { propsToQuery, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : CssDimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{| width? : ?number, height? : ?number |}], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype InternalState = {|\n    visible : boolean\n|};\n\ntype GetProxyContainer = (container : string | HTMLElement) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, {| context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> |}) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, {| windowName : string |}) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, {| context : $Values<typeof CONTEXT>, uid : string |}) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\ntype GetInternalState = () => ZalgoPromise<InternalState>;\ntype SetInternalState = (InternalState) => ZalgoPromise<InternalState>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload,\n    getInternalState : GetInternalState,\n    setInternalState : SetInternalState\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype ParentComponent<P> = {|\n    init : () => void,\n    render : (CrossDomainWindowType, string | HTMLElement, $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function parentComponent<P>(options : NormalizedComponentOptionsType<P>, overrides? : ParentDelegateOverrides<P> = getDefaultOverrides(), parentWin : CrossDomainWindowType = window) : ParentComponent<P> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    let internalState = {\n        visible: true\n    };\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n    const getInternalStateOverride : ?GetInternalState = overrides.getInternalState;\n    const setInternalStateOverride : ?SetInternalState = overrides.setInternalState;\n\n    const getPropsForChild = (domain : string | RegExp) : ZalgoPromise<PropsType<P>> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return ZalgoPromise.hash(result);\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getInternalState = () => {\n        return ZalgoPromise.try(() => {\n            if (getInternalStateOverride) {\n                return getInternalStateOverride();\n            }\n\n            return internalState;\n        });\n    };\n\n    const setInternalState = (newInternalState)  => {\n        return ZalgoPromise.try(() => {\n            if (setInternalStateOverride) {\n                return setInternalStateOverride(newInternalState);\n            }\n\n            internalState = { ...internalState, ...newInternalState };\n            return internalState;\n        });\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const getPropsRef = (proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, uid : string) : ZalgoPromise<PropRef> => {\n        return getPropsForChild(domain).then(childProps => {\n            const value = serializeMessage(proxyWin, domain, childProps);\n\n            const propRef = (childDomain === getDomain())\n                ? { type: INITIAL_PROPS.UID, uid }\n                : { type: INITIAL_PROPS.RAW, value };\n\n            if (propRef.type === INITIAL_PROPS.UID) {\n                const global = getGlobal(window);\n                global.props = global.props || {};\n                global.props[uid] = value;\n\n                clean.register(() => {\n                    delete global.props[uid];\n                });\n            }\n\n            return propRef;\n        });\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: true }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(showElement) : null\n        }).then(noop);\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: false }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(hideElement) : null\n        }).then(noop);\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const getAttributes = () : AttributesType => {\n        if (typeof attributes === 'function') {\n            return attributes({ props });\n        }\n\n        return attributes;\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return propsToQuery(propsDef, props).then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getChildDomain = () : string => {\n        if (domainMatch && typeof domainMatch === 'string') {\n            return domainMatch;\n        }\n\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : string | RegExp => {\n        if (domainMatch && isRegex(domainMatch)) {\n            return domainMatch;\n        }\n\n        return getChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : {| windowName : string |}) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n\n                // $FlowFixMe\n                const attrs = {\n                    name:  windowName,\n                    title: name,\n                    ...getAttributes().iframe\n                };\n\n                return getProxyObject(iframe({ attributes: attrs }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                // $FlowFixMe\n                const attrs = {\n                    name:  `__zoid_prerender_frame__${ name }_${ uniqueID() }__`,\n                    title: `prerender__${ name }`,\n                    ...getAttributes().iframe\n                };\n                return getProxyObject(iframe({\n                    attributes: attrs\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef => {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            childComponent = childExports;\n            initPromise.resolve();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : {| width? : ?number, height? : ?number |}) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err? : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all();\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = () : ZalgoPromise<void> => {\n        if (closeOverride) {\n            return closeOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.CLOSE);\n        }).then(() => {\n            return destroy(new Error(`Window closed`));\n        });\n    };\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n        \n                        const frameWatcher = watchElementForClose(frame, close);\n                        clean.register(() => frameWatcher.cancel());\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n        \n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width, height } = dimensions;\n    \n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                // $FlowFixMe\n                const attrs = {\n                    name: windowName,\n                    width,\n                    height,\n                    ...getAttributes().popup\n                };\n    \n                const win = popup('', attrs);\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin;\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (isClosed) {\n                return close();\n            } else if (!cancelled) {\n                return watchForClose(proxyWin);\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close();\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P> => {\n        const checkClose = () => checkWindowClose(win);\n        return { init: initChild, close, checkClose, resize, onError, show, hide };\n    };\n\n    const buildChildPayload = ({ proxyWin, childDomain, domain, target = window, context, uid } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |} = {}) : ZalgoPromise<ChildPayload> => {\n        return getPropsRef(proxyWin, childDomain, domain, uid).then(propsRef => {\n            return {\n                uid,\n                context,\n                tag,\n                version:      __ZOID__.__VERSION__,\n                childDomain,\n                parentDomain: getDomain(window),\n                parent:       getWindowRef(target, childDomain, uid, context),\n                props:        propsRef,\n                exports:      serializeMessage(proxyWin, domain, buildParentExports(proxyWin))\n            };\n        });\n    };\n\n    const buildWindowName = ({ proxyWin, childDomain, domain, target, uid, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<string> => {\n        return buildChildPayload({ proxyWin, childDomain, domain, target, context, uid }).then(childPayload => {\n            return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n        });\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : {| context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement |}) : ?HTMLElement => {\n        // $FlowFixMe\n        return renderer({\n            container, context, uid, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions, event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context, uid } : {| context : $Values<typeof CONTEXT>, uid : string |}) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context, uid });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                const prerenderResizeListener = onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n\n                event.on(EVENT.RENDERED, prerenderResizeListener.cancel);\n            }\n        });\n    };\n\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } :\n        {| context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> |}) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, uid });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null,\n            internalState:  getInternalState()\n        }).then(({ container, frame, prerenderFrame, internalState: { visible } }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const getBridgeUrl = () : ?string => {\n        if (typeof options.bridgeUrl === 'function') {\n            return options.bridgeUrl({ props });\n        }\n\n        return options.bridgeUrl;\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const setProps = (newProps : PropsInputType<P>, isUpdate? : boolean = false) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newProps });\n        }\n\n        const helpers = getHelpers();\n        extendProps(propsDef, props, newProps, helpers, isUpdate);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps, true);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            \n            if (!child || !proxyWin) {\n                return;\n            }\n\n            return getPropsForChild(getDomainMatcher()).then(childProps => {\n                return child.updateProps(childProps).catch(err => {\n                    return checkWindowClose(proxyWin).then(closed => {\n                        if (!closed) {\n                            throw err;\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            overrides: { props: delegateProps, event, close, onError, getInternalState, setInternalState }\n        }).then(({ data: { parent } }) => {\n            clean.register(() => {\n                if (!isWindowClosed(target)) {\n                    return parent.destroy();\n                }\n            });\n            return parent.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = (target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n            const domain = getDomainMatcher();\n            const childDomain = getChildDomain();\n            \n            checkAllowRender(target, domain, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildUrlPromise = buildUrl();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, childDomain, domain, target, context, uid });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, builtUrl: buildUrlPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, builtUrl }) => {\n                return proxyWin.setLocation(builtUrl);\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        setProps,\n        getHelpers,\n        getDelegateOverrides\n    };\n}\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class ReactClassType {}\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class __ReactComponent {}\n\ntype ReactElementType = {|\n\n|};\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({| render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void |}) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType, typeof ReactClassType> = {\n\n    register: (tag, propsDef, init, { React, ReactDOM }) => {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n                const parent = init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* @flow */\n\nimport { noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nexport const vue : ComponentDriverType<*, VueType, RegisteredVueComponent> = {\n\n    register: (tag, propsDef, init, Vue) => {\n\n        return Vue.component(tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                const el = this.$el;\n                \n                this.parent = init({ ...this.$attrs });\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps({ ...this.$attrs }).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {|\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    |}) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular, AngularModule> = {\n\n    register: (tag, propsDef, init, ng) => {\n\n        const module = ng.module(tag, []).directive(dasherizeToCamel(tag), () => {\n\n            const scope = {};\n\n            for (const key of Object.keys(propsDef)) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    // $FlowFixMe\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {||};\n\ntype Angular2 = {|\n    Component : ({| selector : string, template : string, inputs : $ReadOnlyArray<string> |}) => {|\n        Class : ({| constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void |}) => Angular2Component\n    |},\n    NgModule : ({| declarations : $ReadOnlyArray<Angular2Component>, exports : $ReadOnlyArray<Angular2Component> |}) => {|\n        Class : ({| constructor : () => void |}) => Angular2Module\n    |},\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2, Angular2Module> = {\n\n    register: (tag, propsDef, init, { Component : AngularComponent, NgModule, ElementRef, NgZone }) => {\n        const getProps = (component) => {\n            return replaceObject({ ...component.internalProps, ...component.props }, item => {\n                if (typeof item === 'function') {\n                    return function angular2Wrapped() : void {\n                        // $FlowFixMe\n                        return component.zone.run(() => item.apply(this, arguments));\n                    };\n                }\n                return item;\n            });\n        };\n\n        const ComponentInstance =\n            AngularComponent({\n                selector: tag,\n                template: '<div></div>',\n                inputs:   [ 'props' ]\n            }).Class({\n                constructor: [ ElementRef, NgZone, function angularConstructor(elementRef, zone) {\n                    this._props = {};\n                    this.elementRef = elementRef;\n                    this.zone = zone;\n                } ],\n                ngOnInit () {\n                    const targetElement = this.elementRef.nativeElement;\n                    \n                    this.parent = init(getProps(this));\n                    this.parent.render(targetElement, CONTEXT.IFRAME);\n                },\n                ngDoCheck() {\n                    if (this.parent && !equals(this._props, this.props)) {\n                        this._props = { ...this.props };\n                        this.parent.updateProps(getProps(this));\n                    }\n                }\n            });\n\n\n        const ModuleInstance = NgModule({\n            declarations: [ ComponentInstance ],\n            exports:      [ ComponentInstance ]\n        }).Class({\n            constructor () {\n                // pass\n            }\n        });\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent/parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type uidPropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({| width : ?number, height : ?number |}) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type PropsType<P> = {\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n    uid : uidPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        uid : string,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        onProps : ((PropsType<P>) => void) => void,\n        resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n        getParentDomain : () => string,\n        getParent : () => CrossDomainWindowType,\n        show : () => ZalgoPromise<void>,\n        hide : () => ZalgoPromise<void>\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    queryValue? : ({| value : T |}) => (ZalgoPromise<string> | string),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsInputType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\nexport type BuiltInPropsDefinitionType<P> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n    uid : StringPropDefinitionType<uidPropType, P>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P>,\n    hide : FunctionPropDefinitionType<hidePropType, P>,\n    show : FunctionPropDefinitionType<showPropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n|};\n\nexport type PropsDefinitionType<P> = {|\n    ...BuiltInPropsDefinitionType<P>,\n    [ string ] : MixedPropDefinitionType<P>\n|};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate:      ({ value }) => {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n\n                if (isWindow(value)) {\n                    // $FlowFixMe\n                    if (isWindowClosed(value)) {\n                        throw new Error(`Window is closed`);\n                    }\n\n                    // $FlowFixMe\n                    if (!isSameDomain(value)) {\n                        throw new Error(`Window is not same domain`);\n                    }\n                }\n            },\n            decorate: ({ value }) => {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        uid: {\n            type:          'string',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ uid }) => uid\n        },\n\n        cspNonce: {\n            type:     'string',\n            required: false\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize, identity } from 'belter/src';\n\nimport { getChildPayload, childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType, type PropsType } from './props';\n\ntype LoggerPayload = { [string] : ?string | ?boolean };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : {| width? : boolean, height? : boolean, element? : string |},\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {|\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    |},\n\n    eligible? : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({| props : PropsInputType<P> |}) => void,\n\n    logger? : Logger\n|};\n\nexport type AttributesType = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\ntype AutoResizeType = {|\n    width? : boolean,\n    height? : boolean,\n    element? : string\n|};\n\nexport type NormalizedComponentOptionsType<P> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain : ?(string | RegExp),\n    bridgeUrl : ?string,\n\n    propsDef : PropsDefinitionType<P>,\n    dimensions : CssDimensionsType,\n    autoResize : AutoResizeType,\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : AttributesType | ({| props : PropsType<P> |}) => AttributesType,\n\n    eligible : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({| props : PropsInputType<P> |}) => void,\n    logger : Logger\n|};\n\nexport type ZoidComponentInstance<P> = {|\n    ...ParentHelpers<P>,\n    isEligible : () => boolean,\n    clone : () => ZoidComponentInstance<P>,\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P> = {\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n};\n\nconst getDefaultAttributes = () : AttributesType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultAutoResize = () : AutoResizeType => {\n    // $FlowFixMe\n    return {};\n};\n\nfunction normalizeOptions<P>(options : ComponentOptionsType<P>) : NormalizedComponentOptionsType<P> {\n    let {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props: propsDef = {},\n        dimensions = {},\n        autoResize = getDefaultAutoResize(),\n        allowedParentDomains = WILDCARD,\n        attributes = getDefaultAttributes(),\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        eligible = () => ({ eligible: true }),\n        logger = { info: noop }\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n    const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = dimensions;\n\n    // $FlowFixMe\n    propsDef = { ...getBuiltInProps(), ...propsDef };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        propsDef,\n        dimensions: { width, height },\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger,\n        eligible\n    };\n}\n\nlet cleanInstances = cleanup();\nconst cleanZoid = cleanup();\n\nexport type Component<P> = {|\n    init : (PropsInputType<P>) => ZoidComponentInstance<P>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P>>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P>\n|};\n\nexport function component<P>(opts : ComponentOptionsType<P>) : Component<P> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef,\n        eligible\n    } = options;\n\n    const global = getGlobal();\n    const driverCache = {};\n    const instances = [];\n\n    const isChild = () : boolean => {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === tag && payload.childDomain === getDomain());\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        const allowDelegateListener = on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        const delegateListener = on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { overrides } }) => {\n            return {\n                parent: parentComponent(options, overrides, source)\n            };\n        });\n\n        cleanZoid.register(allowDelegateListener.cancel);\n        cleanZoid.register(delegateListener.cancel);\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n\n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n\n                return context;\n            }\n\n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (props : PropsInputType<P>) : ZoidComponentInstance<P> => {\n        // eslint-disable-next-line prefer-const\n        let instance;\n        props = props || getDefaultInputProps();\n\n        const { eligible: eligibility, reason } = eligible({ props });\n        const isEligible = () => eligibility;\n\n        const onDestroy = props.onDestroy;\n        props.onDestroy = (...args) => {\n            if (instance && eligibility) {\n                instances.splice(instances.indexOf(instance), 1);\n            }\n\n            if (onDestroy) {\n                return onDestroy(...args);\n            }\n        };\n\n        const parent = parentComponent(options);\n        parent.init();\n\n        if (eligibility) {\n            parent.setProps(props);\n        } else {\n            if (props.onDestroy) {\n                props.onDestroy();\n            }\n        }\n\n        cleanInstances.register(() => {\n            parent.destroy(new Error(`zoid destroyed all components`));\n        });\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!eligibility) {\n                    return parent.destroy().then(() => {\n                        throw new Error(reason || `${ name } component is not eligible`);\n                    });\n                }\n\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n\n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n                return parent.render(target, container, finalContext);\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        const clone = ({ decorate = identity } = {}) => {\n            return init(decorate(props));\n        };\n\n        instance = {\n            ...parent.getHelpers(),\n            isEligible,\n            clone,\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n\n        if (eligibility) {\n            instances.push(instance);\n        }\n\n        return instance;\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n\n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n\n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        instances,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D> = {|\n    register : (string, PropsDefinitionType<P>, (PropsInputType<P>) => ZoidComponentInstance<P>, L) => D\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n    init.instances = comp.instances;\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n\n    return init;\n}\n\nexport function destroyComponents() : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = cleanInstances.all();\n    cleanInstances = cleanup();\n    return destroyPromise;\n}\n\nfunction destroyZoid() : ZalgoPromise<void> {\n    return cleanZoid.all();\n}\n\nexport const destroyAll = destroyComponents;\n\nexport function destroy() {\n    destroyAll();\n    destroyGlobal();\n    destroyZoid();\n    destroyPostRobot();\n}\n"],"sourceRoot":""}